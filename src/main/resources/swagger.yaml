#OpenAPI specification
openapi: 3.0.4
info:
  title: cinema_be
  description: cinema_be
  version: 0.0.1

#The servers section specifies the API server and base URL.
#You can define one or several servers, such as production and sandbox.
servers:
  - url: http://localhost:8080
    description: Il local host

# All paths are relative to this url
tags:
  - name: cinema_be


# The paths section defines individual endpoints (paths) in your API, and the
# HTTP methods (operations) supported by these endpoints.
paths:
  /movie:
    get:
      tags:
        - movie
      summary: findById
      description: findById
      operationId: findById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: findById
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movieResDto'
    post:
      tags:
        - movie
      summary: createMovie
      description: createMovie
      operationId: createMovie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieReqDto'

      responses:
        '200':
          description: createMovie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movieResDto'
    put:
      tags:
        - movie
      summary: updateById
      description: updateById
      operationId: updateById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieReqDto'
      responses:
        '200':
          description: updateById
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movieResDto'



    delete:
      tags:
        - movie

      summary: deleteById
      description: deleteById
      operationId: deleteById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: deleteById


components:
  schemas:
    movieReqDto:
      type: object
      properties:
        title:
          type: string
        releaseDate:
          type: string
          format: date

    movieResDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        releaseDate:
          type: string
          format: date
        director:
          type: string
